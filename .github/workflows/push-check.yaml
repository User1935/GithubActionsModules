
name: Build
on: [push, pull_request]

jobs:

  generate-matrix:
    name: Generate matrix for build
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      SHA1: "bananas"
    steps:
      - name: 'not working'
        run: echo $(cat touchy3)
      - uses: actions/checkout@v2
      - name: Check changed files
        id: diff
        run: |
          # See https://github.community/t/check-pushed-file-changes-with-git-diff-tree-in-github-actions/17220/10
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
            export DIFF1=$( git diff --name-state origin/$GITHUB_BASE_REF $GITHUB_SHA )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
            echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
          else
            # Push
            git fetch origin ${{ github.event.before }} --depth=1
            export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            export DIFF1=$( git diff --name-state ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
            echo "::set-output name=diff::${{ github.event.before }}"
          fi
          echo BASEREF: $GITHUB_BASE_REF
          echo Name status: $( git diff --name-status ${{ github.event.before }} $GITHUB_SHA )
          echo ----
          echo "$DIFF"
          # Escape newlines (replace \n with %0A)
          echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
          echo "::set-output name=diff1::$( echo "$DIFF1" | sed ':a;N;$!ba;s/\n/%0A/g' )"
          
      - name: Set matrix for build
        id: set-matrix
        run: |
          # See https://stackoverflow.com/a/62953566/11948346
          DIFF="${{ steps.diff.outputs.diff }}"
          DIFF1="${{ steps.diff.outputs.diff1 }}"
          JSON="{\"include\":["

          # Convert to arrays
          array=($DIFF)
          array1=($DIFF1)

          for i in $(seq 1 $((${#array[@]})))
          do
            if [ "${array1[$((($i-1)*2))]}" == "D" ]; then
                    JSONline="${array[$(($i-1))]}"
                    final=${JSONline//\// }
                    finalarray=($final)
                    if [ "${finalarray[-1]}" == 'terragrunt.hcl' ] && [ ${#finalarray[@]} -gt 1 ]; then
                            
                            unset finalarray[-1]
                            path=$(echo ${finalarray[@]} | sed -r 's/ +/\//g')
                            if [[ "$JSON" != *$path* ]]; then
                                JSON="$JSON,{\"path\":$path/},"
                            fi
                    fi
            fi  
          done

          # Remove last "," and add closing brackets
          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"
          echo $JSON

          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    name: Build "${{ matrix.directory }}" on ${{ matrix.os }}
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd ${{ matrix.directory }}
          echo "${{ matrix.directory }} ${{ matrix.os }}"